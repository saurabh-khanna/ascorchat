# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    
    env:
      STREAMLIT_SERVER_PORT: 8501
      APP_PASSWORD: 123
      OPENAI_API_KEY: sk-123
      
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install -r requirements.txt

    - name: Make script executable
      run: chmod +x streamlit.sh

    - name: Smoke run
      shell: bash
      run: |
        set -euo pipefail

        # Start in its own process group so we can kill the whole tree
        setsid ./streamlit.sh > streamlit-linux.log 2>&1 &
        APP_PID=$!
        PGID=$(ps -o pgid= $APP_PID | tr -d ' ')
        echo "Started streamlit.sh with PID $APP_PID (PGID $PGID)"

        # Wait up to 20
        for i in {1..20}; do
          if curl -fsS http://127.0.0.1:${STREAMLIT_SERVER_PORT} >/dev/null 2>&1; then
            echo "Streamlit responded on port ${STREAMLIT_SERVER_PORT}"
            break
          fi
          sleep 1
        done

        # Let it breathe a bit so imports happen, then kill the group
        sleep 3
        echo "Stopping process group $PGID..."
        kill -TERM -$PGID || true
        sleep 3
        # If anything is still alive, SIGKILL the group
        pkill -KILL -g $PGID || true

        # Print last lines for quick context
        tail -n 50 streamlit-linux.log || true
